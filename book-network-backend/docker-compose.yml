services:
 postgres:
   container_name: postgres-sql-bsn
   image: postgres
   environment:
     POSTGRES_USER: username
     POSTGRES_PASSWORD: password
     PGDATA: /var/lib/postgresql/data9
     POSTGRES_DB: book_social_network
    #  POSTGRES_HOST: postgres
   volumes:
     - postgres:/data9/postgres
   ports:
     - 127.0.0.1:5450:5432
  #  extra_hosts:
  #    - "host.docker.internal:host-gateway"
   networks:
     - spring-demo
    #  - dbHost
   restart: unless-stopped
  #  healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "username"]
  #     interval: 10s
  #     retries: 5
  #     timeout: 5s

 mail-dev:
   container_name: mail-dev-bsn
   image: maildev/maildev
   ports:
     - 1080:1080
     - 1025:1025

#  bsn-api:
#    build:
#       context: ../
#       dockerfile: docker/backend/Dockerfile  # Adjust to the correct path
#    container_name: bsn-api
#    depends_on:
#      - postgres
#    environment:
#      DB_URL: jdbc:postgresql://postgres:5432/book_social_network
#    ports:
#      - 8088:8088
#    networks:
#      - spring-demo

#
#  bsn-api:
#    container_name: bsn-api
#    image: bsn/bsn:1.0.0
#   #  we can pass environment variable if we want, but since we have already passed default values in dockerfile itself so here is not must to pass.
#    environment:
#     - DB_URL
#     - ACTIVE_PROFILE
#     - APP_VERSION
#    ports:
#      - 8088:8088
#    networks:
#      - spring-demo
#    depends_on:
#      - postgres

#  bsn-ui:
#    container_name: bsn-ui
#    image: bsn/bsn-ui:1.0.0
#    ports:
#      - 8080:80
#    networks:
#      - spring-demo
#    depends_on:
#      - bsn-api
networks:
 spring-demo:
   driver: bridge
   
volumes:
 postgres:
   driver: local

#  bookservice:
#    container_name: bsn
#    image: bsn/bsn:4.0.0
#    ports:
#    - 8088:8088
#    networks:
#      - spring-demo
#    depends_on:
#      - postgres

# networks:
#   spring-demo:
#     driver: bridge
#   # dbHost:
#   #   driver: host

# volumes:
#   postgres:
#     driver: local
